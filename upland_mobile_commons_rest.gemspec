# Generated by juwelier
# DO NOT EDIT THIS FILE DIRECTLY
# Instead, edit Juwelier::Tasks in Rakefile, and run 'rake gemspec'
# frozen_string_literal: true

# stub: upland_mobile_commons_rest 0.1.2 ruby lib

Gem::Specification.new do |s|
  s.name = 'upland_mobile_commons_rest'
  s.version = '0.1.2'

  s.required_rubygems_version = Gem::Requirement.new('>= 0') if s.respond_to? :required_rubygems_version=
  s.require_paths = ['lib']
  s.authors = ['Nathan Woodhull']
  s.date = '2021-03-12'
  s.description = 'A simple ruby API client gem for the Upland Mobile Commons REST API'
  s.email = 'nathan@controlshiftlabs.com'
  s.extra_rdoc_files = [
    'LICENSE.txt',
    'README.md'
  ]
  s.files = [
    '.document',
    '.rubocop.yml',
    '.travis.yml',
    'CODE_OF_CONDUCT.md',
    'Gemfile',
    'LICENSE.txt',
    'README.md',
    'Rakefile',
    'VERSION',
    'example.rb',
    'lib/upland_mobile_commons_rest.rb',
    'lib/upland_mobile_commons_rest/base.rb',
    'lib/upland_mobile_commons_rest/campaigns.rb',
    'lib/upland_mobile_commons_rest/client.rb',
    'lib/upland_mobile_commons_rest/errors.rb',
    'lib/upland_mobile_commons_rest/groups.rb',
    'lib/upland_mobile_commons_rest/profiles.rb',
    'spec/campaigns_spec.rb',
    'spec/client_spec.rb',
    'spec/fixtures/campaigns/list.xml',
    'spec/fixtures/error.xml',
    'spec/fixtures/error_profile_not_found.xml',
    'spec/fixtures/groups/create.xml',
    'spec/fixtures/groups/list.xml',
    'spec/fixtures/profiles/get.xml',
    'spec/fixtures/profiles/update.xml',
    'spec/group_spec.rb',
    'spec/profiles_spec.rb',
    'spec/spec_helper.rb',
    'spec/support/fixtures.rb',
    'spec/support/stub_requests.rb',
    'spec/upland_mobile_commons_rest_spec.rb',
    'upland_mobile_commons_rest.gemspec'
  ]
  s.homepage = 'http://github.com/controlshift/upland_mobile_commons_rest'
  s.licenses = ['MIT']
  s.rubygems_version = '3.1.2'
  s.summary = 'API client gem for Upland Mobile Commons'

  s.specification_version = 4 if s.respond_to? :specification_version

  if s.respond_to? :add_runtime_dependency
    s.add_runtime_dependency('vertebrae', ['>= 0'])
    s.add_development_dependency('bundler', ['> 2.0'])
    s.add_development_dependency('byebug', ['>= 0'])
    s.add_development_dependency('dotenv', ['>= 0'])
    s.add_development_dependency('juwelier', ['>= 0'])
    s.add_development_dependency('rdoc', ['> 3.12'])
    s.add_development_dependency('rspec', ['>= 0'])
    s.add_development_dependency('rubocop', ['>= 0'])
    s.add_development_dependency('shoulda', ['>= 0'])
    s.add_development_dependency('simplecov', ['>= 0'])
    s.add_development_dependency('webmock', ['>= 0'])
  else
    s.add_dependency('bundler', ['> 2.0'])
    s.add_dependency('byebug', ['>= 0'])
    s.add_dependency('dotenv', ['>= 0'])
    s.add_dependency('juwelier', ['>= 0'])
    s.add_dependency('rdoc', ['> 3.12'])
    s.add_dependency('rspec', ['>= 0'])
    s.add_dependency('rubocop', ['>= 0'])
    s.add_dependency('shoulda', ['>= 0'])
    s.add_dependency('simplecov', ['>= 0'])
    s.add_dependency('vertebrae', ['>= 0'])
    s.add_dependency('webmock', ['>= 0'])
  end
end
